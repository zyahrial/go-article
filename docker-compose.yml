version: "3.3"
services:
  # app:
  #   build:
  #     context: .
  #     dockerfile: dev.Dockerfile
  #   container_name: services-article
  #   ports:
  #     - 8080:8080
  #   volumes:
  #     - ./app:/app
  #   networks:
  #     - service-article

  #redis    
  redis:
    build:
      context: .
      dockerfile: ./docker/images/redis/Dockerfile
    volumes:
      - redis:/data
    # depends_on:
    #   - app
    networks:
      - service-article

  # mongodb:
  #   image: mongo:latest
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: article
  #     MONGO_INITDB_ROOT_PASSWORD: article
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - mongo-data:/data/db
  #   # depends_on:
  #   #   - app
  #   networks:
  #     - service-article

  rabbitmq:
    image: 'rabbitmq:3.6-management-alpine'
    ports:
      # The standard AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=5&retry_delay=5'
      RABBITMQ_DEFAULT_USER: "rmq"
      RABBITMQ_DEFAULT_PASS: "rmq"
    volumes:
      - rabbit-data:/data/rmq
    networks:
      - service-article

volumes:
  app:
    driver: "local"
  redis:
    driver: "local"
  mongo-data:
  rabbit-data:

networks:
  service-article: